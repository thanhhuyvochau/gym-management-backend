version: "3.8"

services:
  # Spring Boot Service
  app-gmp:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - mysqldb
    env_file: ./.env
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - app

  # Minio Service
  minio:
    env_file: ./.env
    command: server /data --console-address ":9001"
    image: quay.io/minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./data/minio:/data
    restart: always
    networks:
      - app

  # MySQL Service
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    command: --init-file /data/application/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=temp
    ports:
      - "3307:3306"
    volumes:
      - db-test:/var/lib/mysql
      - ./mysql-init-scripts/init.sql:/data/application/init.sql
    networks:
      - app
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 1m30s
      timeout: 20s
      retries: 10

  # MongoDB Service
  mongodb:
    image: mongo:6.0.14
    restart: unless-stopped
    ports:
      - "27016:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app
    healthcheck:
      test: [ "CMD", "mongo", "admin", "--eval", "db.runCommand({ ping: 1 })" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Face Detection System Service
  face-system:
    build:
      context: ../gym-management-face-recognization
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - app


volumes:
  db-test:
  mongo-data:

networks:
  app:
